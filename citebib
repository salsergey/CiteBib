#!/usr/bin/env python
# -*- coding: utf-8 -*-
#This program is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with this program.  If not, see <http://www.gnu.org/licenses/>
#
# Author: Francois Boulogne <fboulogne at sciunto dot org>, 2012


import argparse
from libcitebib import info
from libcitebib.main import main

if __name__ == '__main__':

    parser = argparse.ArgumentParser(description=info.SHORT_DESCRIPTION,
                             epilog='')
    parser.add_argument('--version', action='version', version=info.NAME + ' ' + info.VERSION)
    parser.add_argument('--latex', help='LateX type output', action='store_true')
    parser.add_argument('-c', metavar='CONFIG', required=False, help='Configuration file with bibtex paths')
    parser.add_argument('-b', metavar='BIBTEX', nargs='*', required=False, help='Bibtex file(s)')
    parser.add_argument('-t', metavar='TEX', nargs='+', required=True, help='Tex file(s)')
    parser.add_argument('-o', metavar='OUTPUT', required=False, help='Output (default: stdout)')
    args = parser.parse_args()

    bibfiles = args.b
    texfiles = args.t

    from libcitebib.importer import get_bibtex_entries, get_citations

    #Load the tex
    citations = get_citations(texfiles)

    from libcitebib.config import ConfigBibtex

    if bibfiles is None:
        if args.c is not None:
            import os.path
            location, name = os.path.split(args.c)
            bib = ConfigBibtex(name, location)
        else:
            bib = ConfigBibtex()
        bibfiles = bib.get_bibtex_paths()

    if args.latex:
        format = 'latex'
    else:
        format = 'bibtex'
    if args.o == None:
        main(bibfiles, citations, format)
    else:
        with open(args.o, 'w') as f:
            main(bibfiles, citations, format, f)

